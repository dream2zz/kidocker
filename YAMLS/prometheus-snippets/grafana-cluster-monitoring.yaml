apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2019-07-31T08:04:17Z"
  generation: 1
  labels:
    app: grafana
    chart: grafana-0.0.1
    heritage: Tiller
    io.cattle.field/appId: cluster-monitoring
    release: cluster-monitoring
  name: grafana-cluster-monitoring
  namespace: cattle-prometheus
  resourceVersion: "171051"
  selfLink: /apis/apps/v1beta2/namespaces/cattle-prometheus/deployments/grafana-cluster-monitoring
  uid: cb79c0c8-b369-11e9-ae61-0050569c3739
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
      chart: grafana-0.0.1
      release: cluster-monitoring
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: grafana
        chart: grafana-0.0.1
        release: cluster-monitoring
    spec:
      containers:
      - env:
        - name: GF_AUTH_BASIC_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        image: rancher/grafana-grafana:5.4.3
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3000
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
        - mountPath: /usr/share/grafana/public/app/plugins/datasource/prometheus/plugin.json
          name: grafana-static-contents
          subPath: grafana/plugin.json
        - mountPath: /var/lib/grafana/rancher-dashboards
          name: grafana-dashboards
        - mountPath: /etc/grafana/provisioning/dashboards/all.yaml
          name: grafana-provisionings
          subPath: dashboards.yaml
        - mountPath: /etc/grafana/provisioning/datasources/all.yaml
          name: grafana-provisionings
          subPath: datasources.yaml
      - args:
        - nginx
        - -g
        - daemon off;
        - -c
        - /nginx/nginx.conf
        image: rancher/nginx:1.15.8-alpine
        imagePullPolicy: IfNotPresent
        name: grafana-proxy
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /nginx/
          name: grafana-nginx
      dnsPolicy: ClusterFirst
      initContainers:
      - image: rancher/grafana-grafana:5.4.3
        imagePullPolicy: IfNotPresent
        name: grafana-init-plugin-json-copy
        resources:
          limits:
            cpu: 50m
            memory: 50Mi
          requests:
            cpu: 50m
            memory: 50Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /run.sh
          name: grafana-nginx
          subPath: copy-datasource-plugin-json.sh
        - mountPath: /host
          name: grafana-static-contents
      - command:
        - /run.sh
        image: rancher/prometheus-auth:v0.2.0
        imagePullPolicy: IfNotPresent
        name: grafana-init-plugin-json-modify
        resources:
          limits:
            cpu: 50m
            memory: 50Mi
          requests:
            cpu: 50m
            memory: 50Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /run.sh
          name: grafana-nginx
          subPath: modify-datasource-plugin-json.sh
        - mountPath: /host
          name: grafana-static-contents
      nodeSelector:
        beta.kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 472
      serviceAccount: cluster-monitoring
      serviceAccountName: cluster-monitoring
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: grafana-static-contents
      - emptyDir: {}
        name: grafana-storage
      - configMap:
          defaultMode: 420
          items:
          - key: nginx.conf
            mode: 438
            path: nginx.conf
          - key: copy-datasource-plugin-json.sh
            mode: 511
            path: copy-datasource-plugin-json.sh
          - key: modify-datasource-plugin-json.sh
            mode: 511
            path: modify-datasource-plugin-json.sh
          name: grafana-cluster-monitoring-nginx
        name: grafana-nginx
      - configMap:
          defaultMode: 420
          name: grafana-cluster-monitoring-dashboards
        name: grafana-dashboards
      - configMap:
          defaultMode: 420
          name: grafana-cluster-monitoring-provisionings
        name: grafana-provisionings
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2019-08-01T02:14:26Z"
    lastUpdateTime: "2019-08-01T02:14:26Z"
    message: ReplicaSet "grafana-cluster-monitoring-576c5d879f" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2019-08-05T02:04:20Z"
    lastUpdateTime: "2019-08-05T02:04:20Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
