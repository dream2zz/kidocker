apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  annotations:
    project.cattle.io/namespaces: '["cattle-pipeline","cattle-prometheus","cattle-system","ingress-nginx","kube-node-lease","kube-public","kube-system"]'
    prometheus-operator-input-hash: "11068614881267278113"
  creationTimestamp: "2019-08-01T02:12:07Z"
  generation: 1
  labels:
    app: prometheus
    chart: prometheus-0.0.1
    heritage: Tiller
    io.cattle.field/appId: cluster-monitoring
    monitoring.coreos.com: "true"
    release: cluster-monitoring
  name: prometheus-cluster-monitoring
  namespace: cattle-prometheus
  ownerReferences:
  - apiVersion: monitoring.coreos.com/v1
    blockOwnerDeletion: true
    controller: true
    kind: Prometheus
    name: cluster-monitoring
    uid: cb84c209-b369-11e9-ae61-0050569c3739
  resourceVersion: "171625"
  selfLink: /apis/apps/v1beta2/namespaces/cattle-prometheus/statefulsets/prometheus-cluster-monitoring
  uid: c331eb79-b401-11e9-bd4a-0050569c3739
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
      chart: prometheus-0.0.1
      monitoring.coreos.com: "true"
      prometheus: cluster-monitoring
      release: cluster-monitoring
  serviceName: prometheus-operated
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
        chart: prometheus-0.0.1
        monitoring.coreos.com: "true"
        prometheus: cluster-monitoring
        release: cluster-monitoring
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: prometheus
                  prometheus: cluster-monitoring
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --web.console.templates=/etc/prometheus/consoles
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention=12h
        - --web.enable-lifecycle
        - --storage.tsdb.no-lockfile
        - --web.route-prefix=/
        - --web.listen-address=127.0.0.1:9090
        image: rancher/prom-prometheus:v2.7.1
        imagePullPolicy: IfNotPresent
        name: prometheus
        resources:
          limits:
            cpu: "1"
            memory: 1000Mi
          requests:
            cpu: 750m
            memory: 750Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/config_out
          name: config-out
          readOnly: true
        - mountPath: /prometheus
          name: prometheus-cluster-monitoring-db
        - mountPath: /etc/prometheus/rules/prometheus-cluster-monitoring-rulefiles-0
          name: prometheus-cluster-monitoring-rulefiles-0
        - mountPath: /etc/prometheus/secrets/exporter-etcd-cert
          name: secret-exporter-etcd-cert
          readOnly: true
        - mountPath: /etc/prometheus/configmaps/prometheus-cluster-monitoring-nginx
          name: configmap-prometheus-cluster-monitoring-nginx
          readOnly: true
      - args:
        - --log-format=logfmt
        - --reload-url=http://localhost:9090/-/reload
        - --config-file=/etc/prometheus/config/prometheus.yaml.gz
        - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
        command:
        - /bin/prometheus-config-reloader
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: rancher/coreos-prometheus-config-reloader:v0.29.0
        imagePullPolicy: IfNotPresent
        name: prometheus-config-reloader
        resources:
          limits:
            cpu: 50m
            memory: 50Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config
        - mountPath: /etc/prometheus/config_out
          name: config-out
      - command:
        - /bin/sh
        - -c
        - cp /nginx/run-sh.tmpl /var/run/nginx-start.sh; chmod +x /var/run/nginx-start.sh;
          /var/run/nginx-start.sh
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: rancher/nginx:1.15.8-alpine
        imagePullPolicy: IfNotPresent
        name: prometheus-proxy
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          procMount: Default
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /nginx
          name: configmap-prometheus-cluster-monitoring-nginx
      - args:
        - --proxy-url=http://127.0.0.1:9090
        - --listen-address=$(POD_IP):9090
        - --filter-reader-labels=prometheus
        - --filter-reader-labels=prometheus_replica
        command:
        - prometheus-auth
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: rancher/prometheus-auth:v0.2.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /-/healthy
            port: web
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: prometheus-agent
        ports:
        - containerPort: 9090
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /-/ready
            port: web
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - args:
        - --webhook-url=http://localhost:9090/-/reload
        - --volume-dir=/etc/prometheus/rules/prometheus-cluster-monitoring-rulefiles-0
        image: rancher/coreos-configmap-reload:v0.0.1
        imagePullPolicy: IfNotPresent
        name: rules-configmap-reloader
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/rules/prometheus-cluster-monitoring-rulefiles-0
          name: prometheus-cluster-monitoring-rulefiles-0
      dnsPolicy: ClusterFirst
      nodeSelector:
        beta.kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccount: cluster-monitoring
      serviceAccountName: cluster-monitoring
      terminationGracePeriodSeconds: 600
      volumes:
      - name: config
        secret:
          defaultMode: 420
          secretName: prometheus-cluster-monitoring
      - emptyDir: {}
        name: config-out
      - configMap:
          defaultMode: 420
          name: prometheus-cluster-monitoring-rulefiles-0
        name: prometheus-cluster-monitoring-rulefiles-0
      - name: secret-exporter-etcd-cert
        secret:
          defaultMode: 420
          secretName: exporter-etcd-cert
      - configMap:
          defaultMode: 420
          name: prometheus-cluster-monitoring-nginx
        name: configmap-prometheus-cluster-monitoring-nginx
      - emptyDir: {}
        name: prometheus-cluster-monitoring-db
  updateStrategy:
    type: RollingUpdate
status:
  collisionCount: 0
  currentReplicas: 1
  currentRevision: prometheus-cluster-monitoring-5984bb5df7
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updateRevision: prometheus-cluster-monitoring-5984bb5df7
  updatedReplicas: 1
